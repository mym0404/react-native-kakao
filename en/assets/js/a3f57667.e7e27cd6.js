"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1742],{9081:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>h});var t=a(4848),c=a(8453);const l={sidebar_position:104},o="Check KakaoTalk Channel Relationship",s={id:"channel/get-channels",title:"Check KakaoTalk Channel Relationship",description:"Check KakaoTalk Channel Relationship",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/channel/get-channels.mdx",sourceDirName:"channel",slug:"/channel/get-channels",permalink:"/en/docs/channel/get-channels",draft:!1,unlisted:!1,editUrl:"https://github.com/mym0404/react-native-kakao/tree/main/docs/docs/channel/get-channels.mdx",tags:[],version:"current",sidebarPosition:104,frontMatter:{sidebar_position:104},sidebar:"tutorialSidebar",previous:{title:"Chat with KakaoTalk Channel",permalink:"/en/docs/channel/chat-channel"},next:{title:"Troubleshooting & FAQ",permalink:"/en/docs/channel/faq"}},i={},h=[{value:"Check KakaoTalk Channel Relationship",id:"check-kakaotalk-channel-relationship-1",level:2}];function r(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"check-kakaotalk-channel-relationship",children:"Check KakaoTalk Channel Relationship"}),"\n",(0,t.jsx)(e.h2,{id:"check-kakaotalk-channel-relationship-1",children:"Check KakaoTalk Channel Relationship"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://developers.kakao.com/docs/latest/ko/kakaotalk-channel/ios#check-relationship",children:"Official Documentation"})}),"\n",(0,t.jsxs)(e.p,{children:["You can check the KakaoTalk channel relationship using the ",(0,t.jsx)(e.code,{children:"channels"})," function."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"export function channels(params: { channelPublicIds?: string[] } = {}): Promise<KakaoChannel[]>\n"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"channelPublicIds"}),": IDs of the channels to check the relationship. If not provided, it checks all channels."]}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:"The types used are as follows:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-tsx",children:"export interface KakaoChannel {\n  uuid: string;\n  encodedId: string;\n  relation: 'added' | 'none' | 'blocked' | 'unknown';\n  updatedAt?: number; // unix\n}\n"})})]})}function d(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(r,{...n})}):r(n)}},8453:(n,e,a)=>{a.d(e,{R:()=>o,x:()=>s});var t=a(6540);const c={},l=t.createContext(c);function o(n){const e=t.useContext(l);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:o(n.components),t.createElement(l.Provider,{value:e},n.children)}}}]);