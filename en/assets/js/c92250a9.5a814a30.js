"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1910],{4866:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var t=o(4848),i=o(8453);const a={sidebar_position:3},r="iOS Configuration",s={id:"user/intro-ios",title:"iOS Configuration",description:"If you are using Expo, you can skip this section.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/user/intro-ios.mdx",sourceDirName:"user",slug:"/user/intro-ios",permalink:"/en/docs/user/intro-ios",draft:!1,unlisted:!1,editUrl:"https://github.com/mym0404/react-native-kakao/tree/main/docs/docs/user/intro-ios.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Android Configuration",permalink:"/en/docs/user/intro-android"},next:{title:"Expo Configuration",permalink:"/en/docs/user/intro-expo"}},l={},c=[{value:"Setting Up URL Handling for KakaoTalk Login",id:"setting-up-url-handling-for-kakaotalk-login",level:2}];function p(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"ios-configuration",children:"iOS Configuration"}),"\n",(0,t.jsx)(e.admonition,{type:"info",children:(0,t.jsx)(e.p,{children:"If you are using Expo, you can skip this section."})}),"\n",(0,t.jsx)(e.h2,{id:"setting-up-url-handling-for-kakaotalk-login",children:"Setting Up URL Handling for KakaoTalk Login"}),"\n",(0,t.jsxs)(e.p,{children:["Refer to the ",(0,t.jsx)(e.a,{href:"https://developers.kakao.com/docs/latest/ko/kakaologin/ios#before-you-begin-setting-for-kakaotalk",children:"Official Documentation"})," for the essential configuration to implement KakaoTalk login functionality."]}),"\n",(0,t.jsxs)(e.p,{children:["Follow the ",(0,t.jsx)(e.a,{href:"https://developers.kakao.com/docs/latest/ko/ios/getting-started#project-plist",children:"instructions"})," to add KakaoTalk to the app's Allowlist to launch KakaoTalk from the app and set up a ",(0,t.jsx)(e.a,{href:"https://developers.kakao.com/docs/latest/ko/documentation-guideline/glossary#%E3%85%8B",children:"custom URL scheme"})," to return to the service app."]}),"\n",(0,t.jsx)(e.p,{children:"KakaoTalk login involves the process of transitioning from the service app to KakaoTalk and back after the user presses the [Agree and Continue] button or cancels the login."}),"\n",(0,t.jsxs)(e.p,{children:["To ensure the proper completion of the Kakao login process when returning from KakaoTalk to the service app, add the following steps to the ",(0,t.jsx)(e.code,{children:"AppDelegate.mm"})," file."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-objc",children:'#import "AppDelegate.h"\n\n// highlight-start\n#import <React/RCTLinkingManager.h>\n#import <RNCKakaoUser/RNCKakaoUserUtil.h>\n// highlight-end\n\n@implementation AppDelegate\n\n...\n\n// highlight-start\n// Linking API\n-  (BOOL)application:(UIApplication *)application openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n\n  // Handling logic in this app if the URL scheme is from KakaoTalk.\n  if([RNCKakaoUserUtil isKakaoTalkLoginUrl:url]) {\n    return [RNCKakaoUserUtil handleOpenUrl:url];\n  }\n\n  return [super application:application openURL:url options:options] || [RCTLinkingManager application:application openURL:url options:options];\n}\n// highlight-end\n\n...\n\n@end\n\n'})}),"\n",(0,t.jsx)(e.admonition,{type:"note",children:(0,t.jsxs)(e.p,{children:["For more details or examples using Swift or ",(0,t.jsx)(e.code,{children:"SceneDelegate"}),", refer to the ",(0,t.jsx)(e.a,{href:"https://developers.kakao.com/docs/latest/ko/kakaologin/ios#before-you-begin-setting-for-kakaotalk",children:"Official Documentation"}),"."]})})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>r,x:()=>s});var t=o(6540);const i={},a=t.createContext(i);function r(n){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),t.createElement(a.Provider,{value:e},n.children)}}}]);