"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[754],{5258:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>d});var s=o(4848),i=o(8453);const t={sidebar_position:102},r="Kakao Login (Web)",c={id:"user/login-web",title:"Kakao Login (Web)",description:"Logging in on the web requires additional steps due to the page redirection method using a redirect URI.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/user/login-web.mdx",sourceDirName:"user",slug:"/user/login-web",permalink:"/en/docs/user/login-web",draft:!1,unlisted:!1,editUrl:"https://github.com/mym0404/react-native-kakao/tree/main/docs/docs/user/login-web.mdx",tags:[],version:"current",sidebarPosition:102,frontMatter:{sidebar_position:102},sidebar:"tutorialSidebar",previous:{title:"Kakao Login",permalink:"/en/docs/user/login"},next:{title:"Get User Profile",permalink:"/en/docs/user/profile"}},a={},d=[{value:"Logging In",id:"logging-in",level:2},{value:"Adding Redirect URI in Kakao Console",id:"adding-redirect-uri-in-kakao-console",level:2},{value:"Step 1: Retrieve Authorization Code via Search Parameter from the Redirected Page after Simple Login",id:"step-1-retrieve-authorization-code-via-search-parameter-from-the-redirected-page-after-simple-login",level:2},{value:"Step 2: Issue Access Token with Authorization Code",id:"step-2-issue-access-token-with-authorization-code",level:2},{value:"Response",id:"response",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"kakao-login-web",children:"Kakao Login (Web)"}),"\n",(0,s.jsx)(n.p,{children:"Logging in on the web requires additional steps due to the page redirection method using a redirect URI."}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["All APIs except for login can be used similarly to those in ",(0,s.jsx)(n.a,{href:"/docs/user/login",children:"Kakao Login"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"logging-in",children:"Logging In"}),"\n",(0,s.jsx)(n.p,{children:"You can perform tasks like user registration, login, receiving additional consent, and obtaining agreement for terms using Kakao Login."}),"\n",(0,s.jsx)(n.h2,{id:"adding-redirect-uri-in-kakao-console",children:"Adding Redirect URI in Kakao Console"}),"\n",(0,s.jsx)(n.p,{children:"Add a Redirect URI in the Kakao Login section of the Kakao Console."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://raw.githubusercontent.com/mym0404/image-archive/master/202405030144548.webp",alt:"feat"})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"The example shown is for using port 80 in a development environment. You should specify the required Redirect URI for both the development and release environments."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const { code } = useGlobalSearchParams<{ code?: string }>();\nconst accessTokenIssued = useRef(false);\nuseEffect(() => {\n  const go = async () => {\n    const { accessToken } = await issueAccessTokenWithCodeWeb({\n      code: code!,\n      redirectUri: 'http://localhost',\n    });\n    setAccessTokenWeb(accessToken);\n    accessTokenIssued.current = true;\n  };\n\n  if (code && !accessTokenIssued.current) {\n    go();\n  }\n}, [code]);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"step-1-retrieve-authorization-code-via-search-parameter-from-the-redirected-page-after-simple-login",children:"Step 1: Retrieve Authorization Code via Search Parameter from the Redirected Page after Simple Login"}),"\n",(0,s.jsxs)(n.p,{children:["Calling the ",(0,s.jsx)(n.code,{children:"login()"})," function redirects the user to the Kakao login page."]}),"\n",(0,s.jsxs)(n.p,{children:["For the web platform, the ",(0,s.jsx)(n.code,{children:"web"})," object must be passed."]}),"\n",(0,s.jsxs)(n.p,{children:["Other options outside the ",(0,s.jsx)(n.code,{children:"web"})," object are ignored."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, the ",(0,s.jsx)(n.code,{children:"prompt"})," value is set both inside and outside the ",(0,s.jsx)(n.code,{children:"web"})," object, but only the ",(0,s.jsx)(n.code,{children:"prompt"})," inside the ",(0,s.jsx)(n.code,{children:"web"})," object is used on the web platform."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { login } from '@react-native-kakao/user';\n\n...\n\nlogin({\n  web: {\n    redirectUri: 'http://localhost',\n    prompt: ['select_account'],\n  },\n})\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"Dangerous",type:"danger",children:(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"redirectUri"})," used in the console registration, when calling ",(0,s.jsx)(n.code,{children:"login"}),", and for ",(0,s.jsx)(n.code,{children:"issueAccessTokenWithCodeWeb"})," must match for proper functionality."]})}),"\n",(0,s.jsxs)(n.p,{children:["Refer to the ",(0,s.jsx)(n.a,{href:"https://developers.kakao.com/docs/latest/ko/kakaologin/js#login",children:"Official Documentation"})," for detailed information on the parameters."]}),"\n",(0,s.jsx)(n.h2,{id:"step-2-issue-access-token-with-authorization-code",children:"Step 2: Issue Access Token with Authorization Code"}),"\n",(0,s.jsxs)(n.p,{children:["Use the ",(0,s.jsx)(n.code,{children:"issueAccessTokenWithCodeWeb()"})," function to obtain the actual Access Token using the authorization code."]}),"\n",(0,s.jsxs)(n.p,{children:["Once you have the Access Token, pass it to the ",(0,s.jsx)(n.code,{children:"setAccessTokenWeb()"})," function."]}),"\n",(0,s.jsxs)(n.p,{children:["The example below demonstrates completing the login in an Expo router environment using the ",(0,s.jsx)(n.code,{children:"code"})," from the search parameter."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"const { code } = useGlobalSearchParams<{ code?: string }>();\nconst accessTokenIssued = useRef(false);\nuseEffect(() => {\n  const go = async () => {\n    const { accessToken } = await issueAccessTokenWithCodeWeb({\n      code: code!,\n      redirectUri: 'http://localhost',\n    });\n    setAccessTokenWeb(accessToken);\n    accessTokenIssued.current = true;\n  };\n\n  if (code && !accessTokenIssued.current) {\n    go();\n  }\n}, [code]);\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"TIP",type:"tip",children:(0,s.jsxs)(n.p,{children:["The example provided is for illustration purposes. The key is to retrieve the ",(0,s.jsx)(n.code,{children:"code"})," from the search parameter and then sequentially call ",(0,s.jsx)(n.code,{children:"issueAccessTokenWithCodeWeb"})," and ",(0,s.jsx)(n.code,{children:"setAccessTokenWeb"}),"."]})}),"\n",(0,s.jsxs)(n.p,{children:["Refer to the ",(0,s.jsx)(n.a,{href:"https://developers.kakao.com/docs/latest/ko/kakaologin/rest-api#request-token-request-body",children:"Official Documentation"})," for detailed information on the parameters."]}),"\n",(0,s.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,s.jsxs)(n.p,{children:["Returns token-related information via a ",(0,s.jsx)(n.code,{children:"Promise"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The response includes the following:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"{\n  tokenType: string;\n  accessToken: string;\n  idToken?: string;\n  expiresIn: number; // unix\n  refreshToken: string;\n  refreshTokenExpiresIn: number; // unix\n  scope?: string;\n};\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>c});var s=o(6540);const i={},t=s.createContext(i);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);